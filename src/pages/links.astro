---
interface Bookmark {
  id: string;
  title: string;
  url: string;
  createdAt: string;
  bookmarkSource: "Raindrop" | "ReadwiseReader";
  originalUrl: string;
  summary?: string;
  author?: string;
  tags?: string[];
  imageUrl?: string;
}

const links = await fetch('https://flatmeadow.com/links/all-bookmarks.json')
const linkData = await links.json() as Bookmark[];

// Function to format date
function formatDate(dateString: string) {
  return new Date(dateString).toLocaleDateString('en-US', { 
    year: 'numeric', 
    month: 'short', 
    day: 'numeric' 
  });
}

// Function to get favicon
function getFavicon(url: string) {
  return `https://www.google.com/s2/favicons?domain=${url}&sz=32`;
}
---

<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
  <h1 class="text-4xl font-bold text-gray-900 mb-4">Bookmarked Links</h1>
  <p class="text-xl text-gray-600 mb-8">A curated feed of interesting links from Readwise and Raindrop.</p>

  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
    {linkData.map((link) => (
      <div class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300">
        <a href={link.url} target="_blank" rel="noopener noreferrer" class="block">
          {link.imageUrl && (
            <img src={link.imageUrl} alt={link.title} class="w-full h-48 object-cover" />
          )}
          <div class="p-6">
            <div class="flex items-center mb-2">
              <img src={getFavicon(link.url)} alt="Favicon" class="w-4 h-4 mr-2" />
              <h2 class="text-xl font-semibold text-gray-900 line-clamp-2">{link.title}</h2>
            </div>
            {link.summary && (
              <p class="text-sm text-gray-600 mb-4 line-clamp-3">{link.summary}</p>
            )}
            <div class="flex items-center justify-between text-sm text-gray-500">
              <span>{formatDate(link.createdAt)}</span>
              <span class="px-2 py-1 bg-gray-100 rounded-full">{link.bookmarkSource}</span>
            </div>
          </div>
        </a>
        {link.tags && link.tags.length > 0 && (
          <div class="px-6 pb-4">
            {link.tags.map((tag) => (
              <span class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 mb-2">
                #{tag}
              </span>
            ))}
          </div>
        )}
      </div>
    ))}
  </div>
</div>
